# Default values for alertmanager-uvdesk-agent.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2

image:
  repository: "k-harbor-01.server.maas/prome-gateway/prome-alert-gateway"
  tag: "dev-uvdesk-gong-v0.0.3"
  pullPolicy: IfNotPresent
  
imagePullSecrets: []
# nameOverride: ""
# fullnameOverride: ""
service:
  type: ClusterIP
  port: 8080
appconfig:
  # debugbody = true: Enables debugging by printing incoming requests to the console. Alerts will not be sent to the destination.
  debugbody: "false"
  envFileSecretName: "app-config"
  envFile: |
    CREATE_TICKET_ENDPOINT="http://10.10.54.4/uvdesk-community-v1.1.7/public/api/v1/ticket"
    GET_ACCESS_TOKEN_ENDPOINT="http://10.10.54.4:5000/api/v2/authen"
    USERNAME="tor"
    PASSWORD="1234@"
volumes: 
  - name: app-config
    secret:
      secretName: app-config
volumeMounts:
  - name: app-config
    mountPath: "/app/.env"
    subPath: ".env"
    readOnly: true
deploymentAnnotations: 
 secret.reloader.stakater.com/reload: "app-config"

ingress:
  enabled: true
  # className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: alertmanager-uvdesk-agent.pso.k8s.maas
      paths:
        - path: /
          pathType: Prefix
  # tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local


#######################################################################################
# Custom
#######################################################################################
podAnnotations: {}
podLabels: {}
serviceAccount:
  create: true
podSecurityContext:
  runAsNonRoot: true  # Ensures that the container cannot run as root
  runAsUser: 1000     # Specifies a non-root user ID
  runAsGroup: 1000
  fsGroup: 1000
securityContext:
  allowPrivilegeEscalation: false
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
nodeSelector: {}
tolerations: []
affinity: {}
